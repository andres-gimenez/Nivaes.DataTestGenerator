name: Publish Release

on:
  release:
    types:
      - released
      - prereleased
    #types: [published]
    #types: [released]
    #types: [prereleased]
    #types: [deleted]

jobs:
  publish_release:
    runs-on: ubuntu-18.04

    steps:
    - name: Read version
      uses: nivaes/get-version@master
      id: get_version

    - name: release
      if: github.event_name.types == 'release'
      run: echo Release

    - name: released
      if: github.event.action == 'released'
      run: echo Released

    - name: prereleased
      if: github.event.action == 'prereleased'
      run: echo Prereleased
      
    - name: Dump GitHub context
      env:
        GITHUB_CONTEXT: ${{ toJson(github) }}
      run: echo "$GITHUB_CONTEXT"
    - name: Dump job context
      env:
        JOB_CONTEXT: ${{ toJson(job) }}
      run: echo "$JOB_CONTEXT"
    - name: Dump steps context
      env:
        STEPS_CONTEXT: ${{ toJson(steps) }}
      run: echo "$STEPS_CONTEXT"
    - name: Dump runner context
      env:
        RUNNER_CONTEXT: ${{ toJson(runner) }}
      run: echo "$RUNNER_CONTEXT"
    - name: Dump strategy context
      env:
        STRATEGY_CONTEXT: ${{ toJson(strategy) }}
      run: echo "$STRATEGY_CONTEXT"
    - name: Dump matrix context
      env:
        MATRIX_CONTEXT: ${{ toJson(matrix) }}
      run: echo "$MATRIX_CONTEXT"

    - name: Dump upload_url 1
      run: echo ${{ join(github.event.release.assets.*.name, ', ')   }}

    - name: Dump upload_url
      run: echo ${{ github.event.release.upload_url }}

    - name: Download Release Asset
      uses: nivaes/download-release-assets@master
      env:
         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        token: ${{ steps.create_release.outputs.upload_url }}
        outputPath: .
